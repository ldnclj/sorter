;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name sorter.messages, :imports nil, :requires nil, :uses nil, :defs {DirectLane {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name sorter.messages/DirectLane, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 3, :record true, :end-line 3, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->DirectLane {:protocol-inline nil, :meta {:file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :line 3, :column 12, :end-line 3, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([hooks]))}, :name sorter.messages/->DirectLane, :variadic false, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 22, :method-params ([hooks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hooks]))}, map->DirectLane {:protocol-inline nil, :meta {:file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :line 3, :column 12, :end-line 3, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__21166]))}, :name sorter.messages/map->DirectLane, :variadic false, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 22, :method-params ([G__21166]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__21166]))}, SearchHookID {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name sorter.messages/SearchHookID, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 4, :record true, :end-line 4, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->SearchHookID {:protocol-inline nil, :meta {:file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :line 4, :column 12, :end-line 4, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([hook-id]))}, :name sorter.messages/->SearchHookID, :variadic false, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 24, :method-params ([hook-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hook-id]))}, map->SearchHookID {:protocol-inline nil, :meta {:file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :line 4, :column 12, :end-line 4, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__21174]))}, :name sorter.messages/map->SearchHookID, :variadic false, :file "/Users/chrishowe-jones/sorter/src/sorter/messages.cljs", :end-column 24, :method-params ([G__21174]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__21174]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:hooks hooks :hook-id hook-id}, :order [:hooks hooks :hook-id hook-id]}, :doc nil}